class Application:;     def __init__(self, master=None):;     #LAYOUT DO GUI INTERFACE PRINCIPAL;             #1º Container;             label_imagem = Label(root, image=img).pack(padx=10, pady=10);             self.fontePadrao = ("Arial", "8", "bold");             global fontePadrao1;             fontePadrao1 = ("Futura", "10", "bold");             self.primeiroContainer = Frame(master);             self.primeiroContainer["pady"] = 10;             self.primeiroContainer.pack();             #RadioButtons;             self.radio = Frame(master);             self.radio["padx"] = 10;             self.radio["pady"] = 10;             self.radio.pack();             self.radio1 = Frame(master);             self.radio1["padx"] = 0;             self.radio1["pady"] = 10;             self.radio1.pack();             self.radio2 = Frame(master);             self.radio2["padx"] = 10;             self.radio2["pady"] = 10;             self.radio2.pack();             self.radio3 = Frame(master);             self.radio3["padx"] = 10;             self.radio3["pady"] = 0;             self.radio3.pack();             self.radio4 = Frame(master);             self.radio4["padx"] = 10    ;             self.radio4["pady"] = 10     ;             self.radio4.pack()         ;             #2º Container;             self.segundoContainer = Frame(master);             self.segundoContainer["padx"] = 10;             self.segundoContainer.pack();             #3º Container;             self.terceiroContainer = Frame(master);             self.terceiroContainer["padx"] = 10;             self.terceiroContainer["pady"] = 10;             self.terceiroContainer.pack();             #4º Container;             self.quartoContainer = Frame(master)        ;             self.quartoContainer["pady"] = 10;             self.quartoContainer.pack();         #FIM LAYOUT INTERFACE PRINCIPAL           ;         #Interface Principal;             self.titulo = Label(self.primeiroContainer, text="MIR4 DRACO MINER");             self.titulo["font"] = ("Futura", "12", "bold");             self.titulo.pack();             self.titulo = Label(self.radio, text="SELECIONE ABAIXO ONDE O MACRO IRÁ RODAR");             self.titulo["font"] = ("Arial", "8", "bold") ;             self.titulo.pack();             global radio_valor;             radio_valor = IntVar();             self.btn1 = ttk.Radiobutton(self.radio,variable= radio_valor, text='JOGO1', value=1,);             self.btn2 = ttk.Radiobutton(self.radio,variable= radio_valor, text='JOGO2', value=2,);             self.btn3 = ttk.Radiobutton(self.radio,variable= radio_valor, text='AMBAS AS TELAS', value=3);             self.btn1.pack(side=LEFT);             self.btn2.pack(side=LEFT);             self.btn3.pack(side=LEFT);             self.titulo = Label(self.radio1, text="SELECIONE ABAIXO QUAL MAPA VOCÊ IRA MINERAR");             self.titulo["font"] = ("Arial", "8", "bold") ;             self.titulo.pack();             self.mapaSelect = ttk.Combobox(self.radio1, values=mapas);             self.mapaSelect.pack();             global f_valor;             f_valor = IntVar();             self.lvl1 = ttk.Radiobutton(self.radio2,variable= f_valor, text='1F', value=1,);             self.lvl2 = ttk.Radiobutton(self.radio2,variable= f_valor, text='2F', value=2,);             self.lvl3 = ttk.Radiobutton(self.radio2,variable= f_valor, text='3F', value=3);             self.lvl4 = ttk.Radiobutton(self.radio2,variable= f_valor, text='4F', value=4);             self.lvl1.pack(side=LEFT);             self.lvl2.pack(side=LEFT);             self.lvl3.pack(side=LEFT);             self.lvl4.pack(side=LEFT);             self.titulo = Label(self.radio3, text="IRÁ USAR PERGAMINHO DE TELEPORTE?");             self.titulo["font"] = ("Arial", "8", "bold") ;             self.titulo.pack();             global tp_valor;             tp_valor = IntVar();             self.btn5 = ttk.Radiobutton(self.radio4,variable= tp_valor, text='SIM', value=1,);             self.btn6 = ttk.Radiobutton(self.radio4,variable= tp_valor, text='NÃO', value=0,);             self.btn5.pack(side=LEFT);             self.btn6.pack(side=LEFT);             #Botão Iniciar                       ;             self.botão = Button(self.segundoContainer, background = "green");             self.botão["text"] = "INICIAR"        ;             self.botão["font"] = ("ARIAL", "8", "bold");             self.botão["width"] = 13                ;             root.bind('<Return>', lambda event=None: self.Iniciar());             self.botão["command"] = self.Iniciar       ;             self.botão.pack();             self.statusMsg = Label(self.segundoContainer, text="", font=self.fontePadrao);             self.statusMsg.pack();             #Botão Parar;             self.botão = Button(self.quartoContainer, background = "red");             self.botão["text"] = "PARAR"        ;             self.botão["font"] = ("ARIAL", "8", "bold");             self.botão["width"] = 13        ;             self.botão["command"] = self.Parar;             self.botão.pack();             self.statusMsg = Label(self.quartoContainer, text="", font=self.fontePadrao);             self.statusMsg.pack();         #Iniciar;     def Iniciar(self):;         tela = int(radio_valor.get()) ;         global lvs;         lvs = int(f_valor.get()) ;         global mapa;         mapa = self.mapaSelect.get()  ;         global iftp ;         iftp =  int(tp_valor.get())                      ;         if (tela !=1) and (tela !=2) and (tela !=3):                ;             self.statusMsg["text"] = f"\\\nNENHUMA TELA FOI SELECIONADA"  ;         elif mapa not in mapas:   ;             self.statusMsg["text"] = f"\\\nNENHUM MAPA FOI SELECIONADO";         elif (lvs !=1) and (lvs !=2) and (lvs !=3) and (lvs !=4):                ;             self.statusMsg["text"] = f"\\\nNENHUM LVL(1F,2F,3F,4F) FOI SELECIONADO";         else:        ;             self.statusMsg["text"] = ""            ;             self.radio.destroy();             self.radio1.destroy();             self.radio2.destroy();             self.radio3.destroy();             self.radio4.destroy();             self.primeiroContainer.destroy()                         ;             self.segundoContainer.destroy();             global statusMsg    ;             statusMsg = Label(self.terceiroContainer, text="", font=self.fontePadrao,);             statusMsg.pack() ;             global rodandoMsg;             rodandoMsg = Label(self.terceiroContainer, text="", font=self.fontePadrao, fg="black", bg="green");             rodandoMsg.pack()   ;             global erroMsg;             erroMsg = Label(self.terceiroContainer, text="", font=fontePadrao1, fg="red");             erroMsg.pack()                                        ;             root.update();             threading.Thread(target=Start).start()           ;             root.update();     #Parar         ;     def Parar(self):;         executando = False;         self.statusMsg = Label(self.quartoContainer, text="", font=self.fontePadrao, fg="red");         self.statusMsg.pack();         self.statusMsg["text"] = "FECHANDO...";         root.update();         time.sleep(0.5);         root.update();         root.destroy();         sys.exit(); #Interface Login; class Login: ;     def __init__(self, master=None):;     #LAYOUT DO GUI INTERFACE PRINCIPAL;         #1º Container      ;             label_imagem = Label(root1, image=img).pack(padx=10, pady=10) ;             self.fontePadrao = ("Arial", "8", "bold");             global fontePadrao1;             fontePadrao1 = ("Futura", "10", "bold")    ;             self.primeiroContainer = Frame(master);             self.primeiroContainer["pady"] = 10;             self.primeiroContainer.pack();             #2º Container;             self.segundoContainer = Frame(master);             self.segundoContainer["padx"] = 10;             self.segundoContainer.pack();             #3º Container;             self.terceiroContainer = Frame(master);             self.terceiroContainer["padx"] = 10;             self.terceiroContainer["pady"] = 20;             self.terceiroContainer.pack();             #4º Container;             self.quartoContainer = Frame(master)        ;             self.quartoContainer["pady"] = 10;             self.quartoContainer.pack();         #FIM LAYOUT INTERFACE PRINCIPAL;         #Interface Principal;             global titulo;             titulo = Label(self.primeiroContainer, text="LOGIN");             titulo["font"] = ("Futura", "12", "bold");             titulo.pack();             self.statusMsg = Label(self.quartoContainer, text="AUTENTICANDO LOGIN...", font=self.fontePadrao, fg="red");             self.statusMsg.pack()  ;             root1.update();             time.sleep(2);             self.statusMsg["text"] = "";             login(); #Quit                                                      ; def on_closing():    ;     sys.exit()        ; #Autentication System; def login():;     url = "https://github.com/Ncjj123/MAC/blob/main/Adress";     page = urlopen(url);     html = page.read().decode("utf-8");     soup = BeautifulSoup(html, "html.parser");     Adr = [];     Adress = soup.find_all('td', {'class': "blob-code blob-code-inner js-file-line"});     Adresses = len(Adress);     for a in range(Adresses):;         Adr.append(Adress[a].string);         check = gma()           ;     if check in Adr: ;         global autorized    ;         titulo["text"] = "AUTENTICADO";         root1.update() ;         global mapas  ;         mapas = ['Vale oculto de Bicheon','Vale das serpentes Oculto'];         time.sleep(1)    ;         root1.destroy();         global root;         root = Tk()       ;         diretorio = (os.path.dirname(os.path.realpath(__file__))) + '/imgs/'  ;         root.iconphoto(False, tk.PhotoImage(file=(os.path.join(diretorio, "icon.png"))));         global img;         img = PhotoImage(file=(os.path.join(diretorio, "logh.png")));         root.title('MIR4 | Macro / By: Musashi');         Application(root);         root.protocol("WM_DELETE_WINDOW", on_closing);         root.mainloop()                   ;     else:;         titulo["text"] = "DISPOSITIVO NÃO AUTENTICADO";         root1.update();         time.sleep(1);         #root.destroy();         sys.exit() ; #Start   ; if __name__ == "__main__":;     root1 = Tk();     diretorio = (os.path.dirname(os.path.realpath(__file__))) + '/imgs/'  ;     root1.iconphoto(False, tk.PhotoImage(file=(os.path.join(diretorio, "icon.png"))));     img = PhotoImage(file=(os.path.join(diretorio, "logh.png")));     root1.title('MIR4 | Macro / By: Musashi');     Login(root1);     root1.mainloop()  ;  
